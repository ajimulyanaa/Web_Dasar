Berbeda ketika kita menggunakan persentase, ukuran kotak akan relatif atau menyesuaikan dari ukuran lain, seperti ukuran jendela browser atau ukuran induk yang menaunginya. Namun ketika menggunakan ems, nilai dimensi kotak akan menyesuaikan berdasarkan ukuran teks yang ditampilkan pada konten elemen tersebut.

============
Limiting Dimension
Beberapa website yang ada sekarang menampilkan layout yang dapat melebar dan menyempit mengikuti ukuran layar pengguna. Pada prinsip tampilan tersebut, mungkin kita memerlukan sebuah limitasi ukuran yang harus ditetapkan agar konten selalu ditampilkan secara proporsional. Untuk melakukannya kita manfaatkan properti min-width dan max-width.

min-width: menetapkan nilai lebar minimal yang harus dimiliki elemen.
max-width: menetapkan nilai lebar maksimal yang harus dimiliki elemen.

============
Overflowing Content
Dimensi box yang dihasilkan elemen selalu cukup untuk menampung konten, tetapi hal ini tidak berlaku jika kita tetapkan secara manual panjang dan lebarnya. Tak jarang terjadi overflow ketika kita menerapkan ukuran pada elemen dengan konten di dalamnya yang begitu banyak.

=>
visible
Visible merupakan nilai default pada properti ini. Konten yang tidak tertampung (overflow) akan tetap ditampilkan seperti pada standarnya.
hidden
Jika terjadi overflow, konten yang tidak tertampung akan disembunyikan.
scroll
Memunculkan scroll bar pada pinggir elemen sehingga konten yang tidak tertampung akan ditampilkan dengan scroll bar. Jika menggunakan nilai ini, scroll bar akan tetap muncul walaupun konten tidak terjadi overflow.
auto
Sama seperti scroll, hanya jika tidak terjadi overflow, nilai visible yang akan diterapkan.

======
Box-Sizing
Pada CSS3, kita dapat memilih tipe pengukuran lain dalam menentukan dimensi elemen. Dengan menggunakan properti box-sizing, kita dapat menentukannya berdasarkan border box. Ukuran elemen sudah termasuk content, padding, dan border. Dengan metode ini, hasil elemen yang ditampilkan (termasuk padding dan border) akan memiliki dimensi yang sama persis seperti yang kita tentukan.

.content {
  box-sizing: content-box;
}

.box {
  box-sizing: border-box;
}

===========
border
Border Width
Properti border-width digunakan untuk mengatur ketebalan dari border, nilai dari properti ini dapat berupa piksel atau menggunakan predefined names value, seperti thin, medium, dan thick. Kita tidak bisa menggunakan nilai persentase (%) pada properti ini.

=>
.box {
  border-top-width: 2px;
  border-right-width: 1px;
  border-bottom-width: 1px;
  border-left-width: 2px;
}

=>
.box {
  border-width: 2px 1px 1px 2px; /*top right bottom left*/
}


===========

Border Style
Kita bisa menetapkan tipe border dengan menggunakan properti border-style. Berikut adalah nilai-nilai yang dapat digunakan pada properti ini.

solid

Tipe garis padat (tidak terputus-putus).


dotted

Garis yang dibentuk dari serangkaian titik-titik (jika ketebalan garis 2px, titik-titik akan berukuran 2px dan memiliki jarak 2px antar titiknya).


dashed

Garis yang dibentuk dari serangkaian garis pendek.


double

Garis yang dibentuk dari dua buah garis padat.


groove

Tipe garis yang berbentuk seperti frame.

hidden

Digunakan untuk menyembunyikan garis pada elemen.

.box {
  border-top-style: solid;
  border-right-style: dotted;
  border-bottom-style: groove;
  border-left-style: double;
}

=========

Border Color
Properti terakhir adalah border-color. Properti ini digunakan untuk menentukan warna pada garis dengan menggunakan nilai RGB, Hex, atau nama warna pada CSS

border-color:RGB(80,132,168)

=====
Display Roles
Kita pernah membahas mengenai inline dan block pada modul HTML sebelumnya bahwa standarnya setiap elemen HTML memiliki dua tipe, yaitu block dan inline. 

Inline Element

Elemen HTML yang secara default tidak menambahkan baris baru ketika dibuat.
Nilai lebar dan tinggi elemen inline sebesar konten di dalamnya, dan tidak dapat diubah.
Margin dan padding hanya mempengaruhi elemen secara horizontal, tidak vertikal.
Block Element

Elemen HTML secara default menambahkan baris baru ketika dibuat.
Jika tidak diatur lebarnya, lebar dari elemen block akan memenuhi lebar dari browser atau elemen yang menaunginya.
Kita dapat mengatur dimensi dari elemen block.
Di dalam elemen block, kita dapat menyimpan tag elemen HTML lainnya.

li {
  display: inline;

  margin-left: 5px;
}

========
Box Shadow

box-shadow: 6px 6px 5px 10px #666666;

Nilai pertama: menunjukkan seberapa jauh ke kiri atau kanan (horizontal) bayangan harus ditampakkan.
Nilai kedua: menunjukkan jarak ke atas atau ke bawah (vertical) bayangan harus ditampakkan. 
Nilai ketiga (opsional): menentukan tingkat keburaman yang harus diterapkan pada bayangan.
Nilai keempat (opsional): tingkat sebaran (spread) bayangan. Semakin besar nilai yang ditentukan, bayangan yang tampak akan semakin luas.
Nilai kelima: menentukan warna yang digunakan pada bayangan.

===

.rounded {
  border-radius: 10px 5px 10px 5px;
}

.featured-image {
  width: 100%;
  max-height: 300px;
  object-fit: cover;
  object-position: center;
}



